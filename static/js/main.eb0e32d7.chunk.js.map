{"version":3,"sources":["Components/LatestUpdate/LatestUpdate.js","Components/Table/Table.js","Components/Chart/Chart.js","data/covidAPI.js","App.js","index.js"],"names":["Latest","props","className","date","confirmed","differenceC","recovered","differenceR","deaths","differenceD","Table","table","confirmedData","recoveredData","deathsData","map","index","Chart","chart","options","legend","display","maintainAspectRatio","data","labels","datasets","label","borderColor","borderWidth","pointRadius","type","getCovidData","a","fetch","then","response","json","Poland","forEach","push","reverse","arr","previous","latestState","pop","previousLatestState","length","App","useState","setData","getData","useEffect","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb0e32d7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./LatestUpdate.css\";\r\n\r\nconst Latest = (props) => {\r\n  return (\r\n    <div className=\"latest\">\r\n      <div className=\"dateDiv\">\r\n        Stan na dzień: <span className=\"date\">{props.date}</span>\r\n      </div>\r\n      <div className=\"todayBox todayConfirmedBox\">\r\n        Zakażeni\r\n        <div className=\"todayInfo todayConfirmedInfo\">\r\n          {props.confirmed} (+{props.differenceC})\r\n        </div>\r\n      </div>\r\n      <div className=\"todayBox todayRecoveredBox\">\r\n        Wyleczeni\r\n        <div className=\"todayInfo todayRecoveredInfo\">\r\n          {props.recovered} (+{props.differenceR})\r\n        </div>\r\n      </div>\r\n      <div className=\"todayBox todayDeadBox\">\r\n        Zgony\r\n        <div className=\"todayInfo todayDeadInfo\">\r\n          {props.deaths} (+{props.differenceD})\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Latest;\r\n","import React from \"react\";\r\nimport \"./Table.css\";\r\n\r\nconst Table = ({\r\n  table = {\r\n    date: [],\r\n    confirmed: [],\r\n    recovered: [],\r\n    deaths: []\r\n  }\r\n}) => {\r\n  const {\r\n    date,\r\n    confirmed: confirmedData,\r\n    recovered: recoveredData,\r\n    deaths: deathsData\r\n  } = table;\r\n  return (\r\n    <div className=\"table\">\r\n      <table>\r\n         <thead>\r\n        <tr className=\"tableHeader\">\r\n          <th>Data</th>\r\n          <th className=\"tableConfirmed\">Zakażeni</th>\r\n          <th className=\"tableRecovered\">Wyleczeni</th>\r\n          <th className=\"tableDead\">Zgony</th>\r\n        </tr>\r\n        </thead>\r\n\r\n        {date.map((date, index) => {\r\n          const { confirmed, differenceC } = confirmedData[index];\r\n          const { deaths, differenceD } = deathsData[index];\r\n          const { recovered, differenceR } = recoveredData[index];\r\n          return (\r\n            <tbody key ={index}>\r\n            <tr>\r\n              <td> {date} </td>\r\n              <td>\r\n                {confirmed} &nbsp; (+{differenceC})\r\n              </td>\r\n              <td>\r\n                {recovered} &nbsp; (+{differenceR})\r\n              </td>\r\n              <td>\r\n                {deaths} &nbsp; (+{differenceD})\r\n              </td>\r\n            </tr>\r\n            </tbody>\r\n          );\r\n        })}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import \"./Chart.css\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst Chart = ({\r\n    chart = {\r\n      date: [],\r\n      confirmed: [],\r\n      recovered: [],\r\n      deaths: []\r\n    }\r\n  }) => {\r\n    return (\r\n      <div className=\"chart\">\r\n        <Line\r\n          options={{\r\n            legend: {\r\n              display: false\r\n            },\r\n            maintainAspectRatio: false\r\n          }}\r\n          data={{\r\n            labels: [...chart.date],\r\n            datasets: [\r\n              {\r\n                label: \"Zakażeni\",\r\n                borderColor: \"#00B2FF\",\r\n                data: [...chart.confirmed],\r\n                borderWidth: \"3\",\r\n                pointRadius: \"false\"\r\n              },\r\n              {\r\n                label: \"Wyleczeni\",\r\n                borderColor: \"#00FF85\",\r\n                data: [...chart.recovered],\r\n                borderWidth: \"3\",\r\n                pointRadius: \"false\"\r\n              },\r\n              {\r\n                label: \"Zgony\",\r\n                borderColor: \"#FF003D\",\r\n                data: [...chart.deaths],\r\n                borderWidth: \"3\",\r\n                pointRadius: \"false\"\r\n              }\r\n            ]\r\n          }}\r\n          type=\"line\"\r\n        />\r\n        {/* <canvas id=\"myChart\"></canvas> */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default Chart;\r\n","const getCovidData = async () => {\r\n  return fetch(\"https://pomber.github.io/covid19/timeseries.json\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const { Poland } = data;\r\n\r\n      const chart = {\r\n        date: [],\r\n        confirmed: [],\r\n        recovered: [],\r\n        deaths: []\r\n      };\r\n\r\n      Poland.forEach(({ date, confirmed, recovered, deaths }) => {\r\n        chart.date.push(date);\r\n        chart.confirmed.push(confirmed);\r\n        chart.recovered.push(recovered);\r\n        chart.deaths.push(deaths);\r\n      });\r\n\r\n      const table = {\r\n        date: [],\r\n        confirmed: [],\r\n        recovered: [],\r\n        deaths: []\r\n      };\r\n\r\n      [...Poland]\r\n        .reverse()\r\n        .forEach(({ date, confirmed, recovered, deaths }, index, arr) => {\r\n          table.date.push(date);\r\n\r\n          const previous = arr[index + 1] || 0;\r\n          const differenceC = confirmed - previous.confirmed;\r\n          table.confirmed.push({ confirmed, differenceC });\r\n          const differenceR = recovered - previous.recovered;\r\n          table.recovered.push({ recovered, differenceR });\r\n          const differenceD = deaths - previous.deaths;\r\n          table.deaths.push({ deaths, differenceD });\r\n        });\r\n\r\n      const latestState = Poland.pop();\r\n      const previousLatestState = Poland[Poland.length - 1];\r\n\r\n      const { date, confirmed, deaths, recovered } = latestState;\r\n      const {\r\n        confirmed: previousConfirmed,\r\n        deaths: previousDeaths,\r\n        recovered: previousRecovered\r\n      } = previousLatestState;\r\n      const differenceC = confirmed - previousConfirmed;\r\n      const differenceR = recovered - previousRecovered;\r\n      const differenceD = deaths - previousDeaths;\r\n\r\n      return {\r\n        date,\r\n        confirmed,\r\n        deaths,\r\n        recovered,\r\n        differenceC,\r\n        differenceD,\r\n        differenceR,\r\n        chart,\r\n        table\r\n      };\r\n    });\r\n};\r\nexport default getCovidData;\r\n","import React, { useEffect, useState } from \"react\";\nimport Latest from './Components/LatestUpdate/LatestUpdate.js';\nimport Table from './Components/Table/Table.js';\nimport Chart from './Components/Chart/Chart.js';\nimport getCovidData from \"./data/covidAPI.js\";\nimport './App.css';\n\n\nconst App = () => {\n  const [data, setData] = useState({});\n  const getData = async () => {\n    setData(await getCovidData());\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  return (\n    <React.Fragment>\n      <h1>Statystyka dotycząca koronawirusa w Polsce</h1>\n      <Latest {...data} />\n      <div className=\"DescriptionBox\">\n        <Table {...data} />\n        <Chart {...data} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}